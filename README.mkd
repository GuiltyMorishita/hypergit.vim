

INTRO
=====
fastgit.vim provides an interface for you to use git from vim.

you can type commit message in a commit message buffer, after commit message
file saved, it will commit with the message file.

fastgit.vim also provides auto synchronization feature by using 'updatetime'
option. it can also do auto-pushing and auto-pulling for
you in background while you have a coffee.

FEATURES
========

- background syncing
- commit message buffer
- no more `git add|rm` command ! even something :GitRemoveFile. please dont!
    you can add files in your commit message

        # commit message
        - xxxx stuff fixed.
        - added new configuration.
        !A NEWFILE
        !D USELESS_FILE

    this will auto add/remove files. so you can also use file completion in
    your commit message buffer

TODO
====

- stash toggle

INSTALLATION
============

via simple makefile:

    makefile -f Makefile.pure install

or you can also install via VIM::Packager:

    # to install VIM::Packager via CPAN
    $ sudo cpan VIM::Packager

    # once you have VIM::Packager you can run ... 
    $ vim-packager build    # convert META into Makefile
    $ make install

    # if you dont want it
    $ make uninstall


CONFIGURATIONS
==============

to enable git auto sync (push , pull in background) , add this to your
`.vimrc`.

    :GitSyncEnable

to enable default mapping:

    let g:fastgit_default_mapping = 1

setup default remote for git pull and push:

    let g:fastgit_default_remote = 'origin'

to use fastgit statusline:

    let g:fastgit_statusline = 'f'

to append git branch info to current statusline (if you have enough space):

    let g:fastgit_statusline = 'a'


DEFAULT MAPPING
===============

the default `<leader>` is a `slash key`, if you want to customize leader key, see
`<leader>` option in vim documentation. 

- `<leader>ci`   : commit current file (\ci)
- `<leader>ca`   : commit all changes  (\ca)
- `<leader>gp`   : git push
- `<leader>gl`   : git pull
- `<leader>ggdi` : git diff this file
- `<leader>gb`   : toggle git branch list window

COMMANDS
========

- GitCommit    : commit current file
- GitCommitAll : commit all changes
- GitPush      : git push
- GitPull      : git pull
- GitBranch    : open git branch buffer
- GitRemote    : open git remote buffer

COMMAND ABBREVIATIONS
=====================

- gci         GitCommit
- gca         GitCommitAll
- gpush       GitPush
- gpull       GitPull
- gpp         GitPush
- gll         GitPull
- gitdiff     GitDiffThis
- gitbranch   GitBranch

EXAMPLE
=======
`GitPush` command example:

simply push:

    :Gpush

to push in background:

    :Gpush &

to push to remote `origin`:

    :Gpush origin

to push master branch to remote `origin`:

    :Gpush origin master


SCREENSHOT
==========

![](http://cloud.github.com/downloads/c9s/fastgit.vim/Screen_shot_2009-11-26_at_3.04.53_PM.png)


